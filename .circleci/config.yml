version: 2
jobs:
  checkout:
    docker:
      - image: cimg/node:20.15.0
    steps:
      - checkout
      - run: mkdir -p /tmp/workspace
      - run: bash $PWD/scripts/checkout.sh /tmp/workspace $PWD/standaardenregister.json
      - run:
          name: List the files which have been created
          command: ls -al /tmp/workspace/*
      - run:
          name: List all standards that have been modified
          command: if [ -e /tmp/workspace/changedstandards.json ] ; then cat /tmp/workspace/changedstandards.json ; fi
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - changedstandards.json
            - commit.json
            - tmp-register.txt
            - repositories/
  extract-info:
    docker:
      - image: cimg/node:20.15.0
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: 
          name: download all reporsitories and switch to their standaardregister branch
          command: | 
            bash $PWD/scripts/extract-info.sh /tmp/workspace $PWD/standaardenregister.json $PWD/config
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - description-paths.txt
            - filenames.txt
            - statistics_config.json
  create-statistics:
    docker:
      - image: ddvlanck/oslo-statistics:1.1
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Creating JSON file with statistics for all standards
          command: bash $PWD/scripts/statistics.sh /tmp/workspace
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - statistics.json
  add-contributors:
    docker:
      - image: cimg/node:20.15.0
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Add contributors and terms to statistics from data.vlaanderen.be-statistics
          command: bash $PWD/scripts/contributors-and-terms.sh /tmp/workspace
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - statistics.json
  prepare-nuxt:
    docker:
      - image: informatievlaanderen/oslo-specification-generator:multilingual-dev4.0
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - add_ssh_keys:
          fingerprints:
            - "81:37:0b:68:3b:e9:c9:64:b8:f2:1f:c9:03:46:74:b0"
      - run:
          name: download translation memory
          working_directory: /tmp/workspace
          command: |
            export CIRCLEWKD=$( eval echo "${CIRCLE_WORKING_DIRECTORY}" )
            GENERATEDREPO="{\"organisation\":\"Informatievlaanderen\",\"repository\":\"OSLO-Standaarden\",\"filepath\":\"content/standaarden/nuxtmemory.tgz\",\"branchtag\":\"standaarden-translations\",\"private\":false}"
            if  ${CIRCLEWKD}/scripts/downloadFileGithub.sh "${GENERATEDREPO}" nuxtmemory.tgz ${TOOLCHAIN_TOKEN} ; then tar -xzf nuxtmemory.tgz ; fi
      - run: bash $PWD/scripts/copy-to-nuxt.sh /tmp/workspace
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - nuxt/
  push-to-nuxt:
    docker:
      - image: cimg/node:20.15.0
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - add_ssh_keys:
          fingerprints:
            - "81:37:0b:68:3b:e9:c9:64:b8:f2:1f:c9:03:46:74:b0"
      - run:
          name: Checkout target repository
          working_directory: /tmp
          command: |
            rm -rf OSLO-Standaardenregister
            git clone git@github.com:Informatievlaanderen/OSLO-Standaardenregister.git
      - run:
          name: Switch to standaarden-tranlsations branch in target repository
          working_directory: /tmp/OSLO-Standaardenregister
          command: |
            git checkout standaarden-translations
            git fetch origin
      - run:
          name: List folder structure of nuxt/
          working_directory: /tmp/workspace
          command: |
            ls -al nuxt/
      - run:
          name: Copy new content to Nuxt content folder
          working_directory: /tmp/workspace
          command: |
            mkdir -p /tmp/OSLO-Standaardenregister/content/standaarden
            cp -r nuxt/* /tmp/OSLO-Standaardenregister/content/standaarden
      - run:
          name: Create new autotranslate memory of the nuxt directory
          working_directory: /tmp/workspace
          command: |
            ls -1
            if [ -d nuxtmemory ] ; then tar -zcf nuxtmemory.tgz nuxtmemory ; cp nuxtmemory.tgz /tmp/OSLO-Standaardenregister/content/standaarden/nuxtmemory.tgz ; fi
      - run:
          name: List folder structure of tmp/OSLO-Standaardenregister/content/standaarden/
          working_directory: /tmp/workspace
          command: |
            ls -al /tmp/OSLO-Standaardenregister/content/standaarden/
      - run:
          name: Copy statistics to Nuxt content folder
          working_directory: /tmp/workspace
          command: |
            cp statistics.json /tmp/OSLO-Standaardenregister/content/statistics.json
      - run:
          name: Insert the commit on the Nuxt branch
          command: |
            export TAG=`echo "${CIRCLE_SHA1}"`
            echo "{\"commit\" : \"$TAG\"}" > /tmp/OSLO-Standaardenregister/commit.json
      - run:
          name: List folder structure of tmp/OSLO-Standaardenregister/content/standaarden/
          working_directory: /tmp/workspace
          command: |
            ls -al /tmp/OSLO-Standaardenregister/content/standaarden/
      - run:
          name: Push results to 'standaarden' branch of OSLO-Standaardenregister
          working_directory: /tmp/OSLO-Standaardenregister
          command: |
            ls ./content/standaarden/
            git config user.email "oslo@oslo"
            git config user.name "Circle CI Builder"
            git add .
            git status
            git commit -m "Applying changes from commit ${CIRCLE_SHA1}" --allow-empty
            export TAG=`echo "${CIRCLE_SHA1}" | cut -c1-15`
            git push --force origin standaarden-translations
  build-state:
    docker:
      - image: cimg/deploy:2024.03
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: prepare environment image
          command: make prepare
      - run:
          name: fetch all the content
          command: make fetch-content
      - run:
          name: build image
          command: make build
      - run:
          name: push new image
          command: make publish
      - run:
          name: cleanup after build and push
          command: make cleanup

workflows:
  version: 2
  create_detail_page:
    jobs:
      - checkout
      - extract-info:
          requires:
            - checkout
      - create-statistics:
          requires:
            - extract-info
      - add-contributors:
          requires:
            - extract-info
            - create-statistics
      - prepare-nuxt:
          requires:
            - extract-info
            - create-statistics
            - add-contributors
      - push-to-nuxt:
          requires:
            - prepare-nuxt
      - build-state:
          requires:
            - checkout
            - prepare-nuxt
            - push-to-nuxt
