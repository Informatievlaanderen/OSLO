version: 2
jobs:
  checkout:
    docker:
      - image: circleci/python
    steps:
      - checkout
      - run: mkdir -p workspace
      - run: ls -al workspace
      - run: bash $PWD/scripts/checkout.sh /tmp/workspace $PWD/standaardenregister.json
      - run:
          name: List the files which have been created
          command: ls -al /tmp/workspace/*
      - run:
          name: List all standards that have been modified
          command: if [ -e /tmp/workspace/changedstandards.json ] ; then cat /tmp/workspace/changedstandards.json ; fi
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - changedstandards.json
            - commit.json
            - tmp-register.txt
            - repositories/
  extract-info:
    docker:
      - image: circleci/python
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: bash $PWD/scripts/extract-info.sh /tmp/workspace $PWD/standaardenregister.json
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - description-paths.txt
            - filenames.txt
            - statistics_config.json
  markdown-to-html:
    docker:
      - image: ddvlanck/markdown-to-html:1.1
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: bash $PWD/scripts/markdown-transformer.sh /tmp/workspace
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - descriptions/
  render-html:
    docker:
      - image: ddvlanck/html-page-generator:1.4.6
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Creating HTML pages for modified or new standards
          command: bash $PWD/scripts/template-renderer.sh
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - html_pages/
  create-statistics:
    docker:
      - image: ddvlanck/oslo-statistics:1.1
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Creating JSON file with statistics for all standards
          command: bash $PWD/scripts/statistics.sh /tmp/workspace
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - statistics.json
  build-state:
    docker:
      - image: cimg/deploy:2024.03
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: prepare environment image
          command: make prepare
      - run:
          name: prepare content (TODO )
          command: mkdir -p /tmp/workspace/content/standaarden
      - run:
          name: Checkout target repository
          workdir: /tmp
          command: |
            rm -rf OSLO-Standaardenregister
            git clone git@github.com:Informatievlaanderen/OSLO-Standaardenregister.git
      - run:
          name: Switch to circleCI branch in target repository
          workdir: /tmp/OSLO-Standaardenregister
          command: |
            git checkout circleCI
            git fetch origin
      - run:
          name: Copy new content to Nuxt content folder
          workdir: /tmp/workspace
          command: |
            cp -r /tmp/OSLO-Standaardenregister/content/standaarden /tmp/workspace/content/standaarden
      - run:
          name: build image
          command: make build
      - run:
          name: push new image
          command: make publish
  push-to-repository:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - add_ssh_keys:
          fingerprints:
            - "15:51:57:05:3f:2c:a3:23:44:2a:52:5a:a6:aa:4c:c5"
      - run:
          name: Checkout target repository
          workdir: /tmp
          command: |
            rm -rf OSLO-StandaardenregisterGenerated
            git clone git@github.com:Informatievlaanderen/OSLO-StandaardenregisterGenerated.git
      - run:
          name: Clean the generated directory
          workdir: /tmp/OSLO-StandaardenregisterGenerated
          command: |
            git fetch origin
      #            if [ "`cat /tmp/workspace/haschangedpublications.json`" == "false" ] ; then git rm -r --force * ; fi
      - run: bash $PWD/scripts/clean-repository-generated.sh
      - run:
          name: Copy generated assets
          workdir: /tmp/workspace
          command: |
            mkdir -p /tmp/OSLO-StandaardenregisterGenerated/public/erkende-standaard
            mkdir -p /tmp/OSLO-StandaardenregisterGenerated/public/kandidaat-standaard
            mkdir -p /tmp/OSLO-StandaardenregisterGenerated/public/geregistreerde-standaard
            mkdir -p /tmp/OSLO-StandaardenregisterGenerated/public/standaard-in-ontwikkeling
            mkdir -p /tmp/OSLO-StandaardenregisterGenerated/public/zonder-status
            mkdir -p /tmp/OSLO-StandaardenregisterGenerated/data
            cp statistics.json /tmp/OSLO-StandaardenregisterGenerated/public/data/statistics.json
            if [ -d html_pages/erkende-standaard ] ; then if [ ! "$(ls -A html_pages/erkende-standaard)" ] ; then echo "Directory html_pages/erkende-standaard is empty" ; else cp -R html_pages/erkende-standaard/* /tmp/OSLO-StandaardenregisterGenerated/public/erkende-standaard/ ; fi fi
            if [ -d html_pages/kandidaat-standaard ] ; then if [ ! "$(ls -A html_pages/kandidaat-standaard)" ] ; then echo "Directory html_pages/kandidaat-standaard is empty" ; else cp -R html_pages/kandidaat-standaard/* /tmp/OSLO-StandaardenregisterGenerated/public/kandidaat-standaard/ ; fi fi
            if [ -d html_pages/geregistreerde-standaard ] ; then if [ ! "$(ls -A html_pages/geregistreerde-standaard)" ] ; then echo "Directory html_pages/geregistreerde-standaard is empty" ; else cp -R html_pages/geregistreerde-standaard/* /tmp/OSLO-StandaardenregisterGenerated/public/geregistreerde-standaard/ ; fi fi
            if [ -d html_pages/standaard-in-ontwikkeling ] ; then if [ ! "$(ls -A html_pages/standaard-in-ontwikkeling)" ] ; then echo "Directory html_pages/standaard-in-ontwikkeling is empty" ; else cp -R html_pages/standaard-in-ontwikkeling/* /tmp/OSLO-StandaardenregisterGenerated/public/standaard-in-ontwikkeling/ ; fi fi
            if [ -d html_pages/zonder-status ] ; then if [ ! "$(ls -A html_pages/zonder-status)" ] ; then echo "Directory html_pages/zonder-status is empty" ; else cp -R html_pages/zonder-status/* /tmp/OSLO-StandaardenregisterGenerated/public/zonder-status/; fi fi
      - run:
          name: Insert the commit
          command: |
            export TAG=`echo "${CIRCLE_SHA1}"`
            echo "{\"commit\" : \"$TAG\"}" > /tmp/OSLO-StandaardenregisterGenerated/commit.json
      - run:
          name: Push results to Github repository OSLO-StandaardenregisterGenerated
          workdir: /tmp/OSLO-StandaardenregisterGenerated
          command: |
            git config user.email "oslo@oslo"
            git config user.name "Circle CI Builder"
            git add .
            git status
            git commit -m "Applying changes from commit ${CIRCLE_SHA1}" --allow-empty
            export TAG=`echo "${CIRCLE_SHA1}" | cut -c1-15`
            git tag "${TAG}"
            git push --force origin master
  prepare-nuxt:
    docker:
      - image: circleci/python
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: bash $PWD/scripts/copy-to-nuxt.sh /tmp/workspace
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - nuxt/
  push-to-nuxt:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - add_ssh_keys:
          fingerprints:
            - "81:37:0b:68:3b:e9:c9:64:b8:f2:1f:c9:03:46:74:b0"
      - run:
          name: Checkout target repository
          workdir: /tmp
          command: |
            rm -rf OSLO-Standaardenregister
            git clone git@github.com:Informatievlaanderen/OSLO-Standaardenregister.git
      - run:
          name: Switch to circleCI branch in target repository
          workdir: /tmp/OSLO-Standaardenregister
          command: |
            git checkout circleCI
            git fetch origin
      - run:
          name: Copy new content to Nuxt content folder
          workdir: /tmp/workspace
          command: |
            mkdir -p /tmp/OSLO-Standaardenregister/content/standaarden
            cp -r nuxt/* /tmp/OSLO-Standaardenregister/content/standaarden
      - run:
          name: Copy statistics to Nuxt content folder
          workdir: /tmp/workspace
          command: |
            cp statistics.json /tmp/OSLO-Standaardenregister/content/statistics.json
      - run:
          name: Insert the commit on the Nuxt branch
          command: |
            export TAG=`echo "${CIRCLE_SHA1}"`
            echo "{\"commit\" : \"$TAG\"}" > /tmp/OSLO-Standaardenregister/commit.json
      - run:
          name: Push results to 'CircleCI' branch of OSLO-Standaardenregister
          workdir: /tmp/OSLO-Standaardenregister
          command: |
            git config user.email "oslo@oslo"
            git config user.name "Circle CI Builder"
            git add .
            git status
            git commit -m "Applying changes from commit ${CIRCLE_SHA1}" --allow-empty
            export TAG=`echo "${CIRCLE_SHA1}" | cut -c1-15`
            git tag "${TAG}"
            git push --force origin circleCI
workflows:
  version: 2
  create_detail_page:
    jobs:
      - checkout
      - extract-info:
          requires:
            - checkout
      - create-statistics:
          requires:
            - extract-info
      - prepare-nuxt:
          requires:
            - create-statistics
      - push-to-nuxt:
          requires:
            - prepare-nuxt
      - build-state:
          requires:
            - checkout
            - prepare-nuxt
            - push-to-nuxt
